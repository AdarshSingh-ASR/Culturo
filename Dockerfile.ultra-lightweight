# Full-stack Dockerfile with React frontend and FastAPI backend
FROM node:18-alpine AS frontend-builder

# Set working directory
WORKDIR /app

# Copy frontend package files
COPY culturo-frontend/package*.json ./

# Install frontend dependencies
RUN npm ci --only=production=false

# Copy frontend source
COPY culturo-frontend/ ./

# Create production environment file
RUN echo "VITE_API_URL=/api" > .env.production && \
    echo "VITE_APP_NAME=Culturo" >> .env.production && \
    echo "VITE_APP_VERSION=1.0.0" >> .env.production && \
    echo "VITE_ENVIRONMENT=production" >> .env.production

# Build the frontend
RUN npm run build

# Python runtime stage
FROM python:3.11-slim

# Set working directory
WORKDIR /app

# Install minimal system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Copy lightweight Python requirements
COPY culturo-backend/requirements-lightweight.txt ./requirements.txt

# Install Python dependencies (lightweight version)
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt

# Copy backend source
COPY culturo-backend/ ./culturo-backend/

# Copy main application files
COPY main.py ./
COPY simple_server.py ./
COPY unified_server.py ./
COPY unified_server_simple.py ./
COPY test_import.py ./

# Test that imports work correctly
RUN python test_import.py

# Copy built frontend from previous stage
COPY --from=frontend-builder /app/dist ./culturo-frontend/dist/

# Create non-root user
RUN useradd -m -u 1000 appuser && chown -R appuser:appuser /app
USER appuser

# Expose port
EXPOSE 8000

# Set environment variables
ENV PYTHONPATH=/app:/app/culturo-backend
ENV HOST=0.0.0.0
ENV PORT=8000
ENV ENVIRONMENT=production

# Start the application
CMD ["python", "main.py"] 